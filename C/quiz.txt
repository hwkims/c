
// 변수 a와 b의 값을 교환하세요
int a = 7, b = 3;

// 나머지(%) 연산자를 사용하지 않고, 나머지를 구하세요
int a = 7, b = 3;

// 2자리 양수를 거꾸로 뒤집어 주세요
// 38 -> 83
int n = 38;         // 3 * 10 + 8

// 3자리 양수를 거꾸로 뒤집어 주세요 (2가지)
// 318 -> 813

// 실수를 입력 받아서 소숫점 아래 영역만 출력해 주세요

// 변수 a와 b의 값을 추가 변수 없이 교환하세요

// 곱셈을 사용해서 문제를 풀어보세요

// 나이가 10대인지 아닌지 알려주세요

// 어떤 양수가 홀수인지 짝수인지 알려주세요
 
// 변수에 들어있는 값을 양수로 만드세요 (절대값)

// 어떤 정수가 양수인지 음수인지 0인지 알려주세요 (필수)

// 2개의 정수 중에서 큰 숫자를 찾는 함수를 만드세요 (매개변수 없는 버전)

// 큰 값을 찾는 함수를 매개변수 버전으로 수정하세요 (필수)

// 'hello'를 5회 출력하는 반복문을 만드세요 (3가지)

// 2개의 정수 중에서 큰 값을 찾는 함수를 만드세요
// 함수 이름은 max_2

// 4개의 정수 중에서 큰 값을 찾는 함수를 만드세요 (복면가왕, 한국시리즈)
// 함수 이름은 max_4

// 알파벳 대문자 전체를 출력하세요 (3가지)

// 알파벳 소문자 전체를 거꾸로 출력하세요 (3가지)

// 1 ~ 100까지의 합계를 구하세요

// 정수 절대값을 반환하는 함수를 만드세요 (함수 이름 abs)

// 양수 n보다 작은 짝수만 출력하는 함수를 만드세요

// 0 ~ 24까지의 정수를 한 줄에 5개씩 출력하세요 (반복문 1개만 사용)

// 1차원 배열에 들어있는 모든 값을 출력하는 함수를 만드세요

// 배열을 거꾸로 출력하는 함수를 만드세요

// 배열의 합계를 구하는 함수를 만드세요

// 배열을 복사하는 함수를 만드세요

// 0 ~ 99 사이의 양수 10개를 배열에 저장하는 함수를 만드세요

// 1차원 배열에서 홀수만 출력하는 함수를 만드세요 

// 정수 변수 2개의 값을 교환하는 함수를 만드세요 (함수 이름은 swap)

// 배열에 대해 [] 사용하지 말고 배열 전체를 출력하세요

// show_array 함수에서 변수 i를 제거하세요 (포인터 버전)

// 문자열의 길이를 알려주는 함수를 만드세요 (배열/포인터 버전)

// 문자열을 복사하는 함수를 만드세요(배열/포인터 버전)

// 학생 성적을 학점으로 변환하는 함수를 만드세요(switch문)
// 성적 : 0 ~ 100
// 학점 : A 90 ~ 100
//        B 80 ~ 89
//        C 70 ~ 79
//        D 60 ~ 69
//        F 0 ~ 59

// 학생 성적을 학점으로 변환하는 함수를 만드세요 (if문 사용)

// 1 ~ n까지의 합계를 구하는 함수를 만드세요 (switch문 사용)
// n : 1 ~ 10

// 아래처럼 출력하세요 (2차원 반복문 사용)
// *
// **
// ***
// ****

// ****
// ***
// **
// *

//    *
//   **
//  ***
// ****

// ****
//  ***
//   **
//    *

// *   *
//  * *
//   *
//  * *
// *   *

// *****
// *   *
// *   *
// *   *
// *****

// 2차원 배열을 출력하는 함수를 만드세요 (int array[3][5])

// fgetc 함수를 사용해서 파일 전체를 출력하세요

// fgets 함수를 사용해서 파일 전체를 출력하세요

// 사용자가 exit을 입력할 때까지 입력한 모든 문자열을 파일에 저장해 보세요

// lotto 배열에 들어있는 유효한 값을 출력하는 함수를 만드세요
// 0 이전에 나온 값들만 유효하다고 판단합니다
int lotto[45] = {19, 31, 26, 45, 41, 3, 29, 0, 1, 2, 3, 4, 5};

// 2차원 배열에서 n번째 요소를 출력하는 함수를 만드세요
int grid[3][4] = {
    0, 1, 2, 3, 
    4, 5, 6, 7, 
    8, 9, 10, 11,
};

// 2차원 배열을 출력하는 함수를 만드세요
// 2차원 형식을 유지하지 말고, 한 줄로 출력해주세요
// --> 0 1 2 3 4 5 6 7 8 9 10 11

// 스택 자료구조를 만드세요

// 스택에 들어있는 모든 데이터를 출력하세요

// 스택을 사용해서 1차원 배열을 거꾸로 뒤집어보세요
int orders[] = {5, 1, 8, 3, 4, 9, 2};   // 2 9 4 3 8 1 5

// 스택을 사용하지 말고 1차원 배열을 거꾸로 뒤집어보세요

// x, y 멤버가 포함된 POINT 구조체를 만들어 보세요

// POINT 구조체가 2개 포함된 RECT 구조체를 만들어 보세요

// POINT 구조체의 x, y를 88, 99로 변경하는 함수를 만드세요

// RECT 구조체에 포함된 모든 값을 출력하세요

// 스택 클래스를 만드세요

// 스택 클래스를 사용해서 배열을 거꾸로 뒤집어 보세요

// 큐 클래스를 만드세요

// 큐 클래스를 사용해서 
// 43명이 둘러앉아 있는 상황에서 세 번째 앉은 사람은 죽는다
// 마지막에 남은 두 사람의 번호를 알려주세요

// "hello"를 5회 출력하는 재귀 함수를 만드세요

// 문자열을 출력하는 재귀 함수를 만드세요
// (한 번 호출할 때마다 한 글자씩 출력)

// 문자열을 거꾸로 출력하는 재귀 함수를 만드세요
// (한 번 호출할 때마다 한 글자씩 출력)

// 1부터 n까지의 합계를 구하는 재귀 함수를 만드세요
